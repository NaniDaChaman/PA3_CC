---
# This is a declarative approach to describe a Kubernetes based
# deployment of an application.  Since this is YAML, the indentation
# is very important
apiVersion: apps/v1
kind: Deployment         # We are testing the Deployment resource
metadata:
  name: ml_model  # A name must be given to the deployment in the metadata section
spec:                     # This is the specification where we can even put the number of replicas
  selector:
    matchLabels:
      app: ml_model        # if anything crashes before 5 secs, the deployment is not
                          # considered as ready and available. Default value is 0
  template:               # Specified info needed to run the pod and what runs in the pod
    metadata:
      labels:
        app: ml_model       # some label to give to this pod (see the matching label above)
    spec:                 # actual specification
      containers:
      - name: ml_model_container       # Used by DNS
        image: ml_model  # this is the image name on hub.docker or if you have one locally. We use an older
                          # and then show how we can upgrade to newer version
        command: ["ML_model/producer.py"]
        #args: ["kafka_2.13-2.8.0/config/server.properties", "--override", "broker.id=0", "--override", "listeners=PLAINTEXT://:9092", "--override", "advertised.listeners=PLAINTEXT://129.114.25.15:30000", "--override", "listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL", "--override", "zookeeper.connect=zk-svc:2181"]
        ports:          
        - containerPort: 9093  
...
# This is a declarative approach to describe a Job type Kubernetes
# workload.   Since this is YAML, the indentation is very important
apiVersion: batch/v1
kind: Job         # We are testing the Job resource type
metadata:
  name: consumer-job  # A name must be given to the Job type in the metadata section
spec:                     # This is the specification where we can even put the number of replicas
  template:               # Specified info needed to run the pod and what runs in the pod
    metadata:
      labels:
        app: consumer        # some label to give to this pod (see the matching label above)
    spec:                 # actual specification
      containers:
      - name: consumer       # this is going to be used for DNS name
        image: consumer   # this is the image in registry accessible
                                             # from all our workers
        imagePullPolicy: Always  # This forces the node to pull the image
        command: ["python3"]
        args: ["home/consumer_cc.py"]  
      restartPolicy: Never  # we ask Kubernetes not to restart
...

